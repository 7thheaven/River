class Solution {
public:
    ListNode *reverseBetween(ListNode *head, int m, int n) {
        if(n<=m)
            return head;
        ListNode *fir=head,*sec,*temp,*rhead;
        for(int i=0;i<m-2;++i)
            fir=fir->next;
        rhead=fir;
        if(m>1)
            fir=fir->next;
        int count=0;
        if(!fir->next)
            return head;
        sec=fir->next;
        while(count<n-m)
        {
            ++count;
            temp=sec->next;
            sec->next=fir;
            fir=sec;
            sec=temp;
        }
        if(m==1)
        {
            head->next=temp;
            return fir;
        }
        rhead->next->next=temp;
        rhead->next=fir;
        return head;
    }
    ListNode *rotateRight(ListNode *head, int k) {
        ListNode *temp(head);
        int len(0);
        while(temp)
        {
            ++len;
            temp=temp->next;
        }
        if(len<2)
            return head;
        if(k>=len)
            k%=len;
        k=len-k;
        head=reverseBetween(head,1,k);
        head=reverseBetween(head,k+1,len);
        head=reverseBetween(head,1,len);
        return head;
    }
};