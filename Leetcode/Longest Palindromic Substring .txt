class Solution {
public:
    string longestPalindrome(string s) {
        int len=s.length();
        if(len<2)
            return s;
        string t="#";
        for(int i=0;i<len;++i)
        {
            t+=s[i];
            t+='#';
        }
        int tl=t.length();
        int c=0,r=0,p[tl],j,max=0,index;
        p[0]=0;
        for(int i=1;i<tl;++i)
        {
            if(2*c-i<0 || r<i)
                p[i]=0;
            else if(p[2*c-i]<r-i)
                p[i]=p[2*c-i];
            else
                p[i]=r-i;
            while(i-p[i]-1>=0 && i+p[i]+1<tl && t[i-p[i]-1]==t[i+p[i]+1])
                ++p[i];
            if(i+p[i]>r)
            {
                c=i;
                r=c+p[i];
            }
            if(max<p[i])
            {
                max=p[i];
                index=i;
            }
        }
        return s.substr((index-max)/2,max);
    }
};