class Solution {
public:
    ListNode *reverseBetween(ListNode *head, int m, int n) {
        if(n<=m)
            return head;
        ListNode *fir=head,*sec,*temp,*rhead;
        for(int i=0;i<m-2;++i)
            fir=fir->next;
        rhead=fir;
        if(m>1)
            fir=fir->next;
        int count=0;
        if(!fir->next)
            return head;
        sec=fir->next;
        while(count<n-m)
        {
            ++count;
            temp=sec->next;
            sec->next=fir;
            fir=sec;
            sec=temp;
        }
        if(m==1)
        {
            head->next=temp;
            return fir;
        }
        rhead->next->next=temp;
        rhead->next=fir;
        return head;
    }
    void reorderList(ListNode *head) {
        int len=0;
        ListNode *temp=head,*sec,*fir,*temp2;
        while(temp)
        {
            temp=temp->next;
            ++len;
        }
        if(len<3)
            return;
        head=reverseBetween(head,len/2+1+len%2,len);
        int count=0;
        sec=head;
        while(++count<len/2+1+len%2)
            sec=sec->next;
        fir=head;
        int c=0;
        while(true)
        {
            temp=fir->next;
            temp2=sec->next;
            fir->next=sec;
            sec->next=temp;
            fir=temp;
            if(temp2)
                sec=temp2;
            else if(fir && len%2)
            {
                    sec->next=fir;
                    fir->next=NULL;
                    break;
            }
            else
            {
                sec->next=NULL;
                break;
            }
        }
    }
};