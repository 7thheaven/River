class Solution {
public:
    char *strStr(char *haystack, char *needle) {
        int n=strlen(haystack),m=strlen(needle);
        if(!m)
            return haystack;
        if(m>n)
            return NULL;
        int kmp[m],k=0,q;
        kmp[0]=0;
        for(q=1;q<m;++q)
        {
            while(k>0 && needle[k]!=needle[q])
                k=kmp[k-1];
            if(needle[k]==needle[q])
                ++k;
            kmp[q]=k;
        }
        q=0;
        for(int i=0;i<n;++i)
        {
            while(q>0 && needle[q]!=haystack[i])
                q=kmp[q-1];
            if(needle[q]==haystack[i])
                ++q;
            if(q==m)
                return haystack+i-m+1;
        }
        return NULL;
    }
};