class Solution {
public:
    vector<int> searchRange(int A[], int n, int target) {
        int low(0),high(n-1),mid,beg(-1),end(-1);
        while(low<=high)
        {
            mid=(low+high)/2;
            if(target<A[mid])
                high=mid-1;
            else if(target==A[mid])
            {
                if(!mid)
                {
                    beg=0;
                    break;
                }
                else if(target>A[mid-1])
                {
                    beg=mid;
                    break;
                }
                else
                    high=mid-1;
            }
            else
                low=mid+1;
        }
        vector<int> res;
        res.push_back(beg);
        if(beg==-1)
        {
            res.push_back(-1);
            return res;
        }
        low=beg;
        high=n-1;
        while(low<=high)
        {
            mid=(low+high)/2;
            if(target>=A[mid])
            {
                if(mid==n-1)
                {
                    end=n-1;
                    break;
                }
                else if(target<A[mid+1])
                {
                    end=mid;
                    break;
                }
                else
                    low=mid+1;
            }
            else
                high=mid-1;
        }
        res.push_back(end);
        return res;
    }
};